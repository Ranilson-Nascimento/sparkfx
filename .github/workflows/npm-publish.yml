name: Publish RN package (manual)

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          scope: '@ranilson'
          always-auth: true

      - name: Check NPM_TOKEN secret
        run: |
          if [ -z "${NPM_TOKEN}" ]; then
            echo "NPM_TOKEN is not set. Configure this secret in the repository settings." >&2
            exit 1
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure npm auth
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
          echo "@ranilson:registry=https://registry.npmjs.org/" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install deps
        working-directory: packages/sparkfx-rn
        run: npm install

      - name: Verify npm auth
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build
        working-directory: packages/sparkfx-rn
        run: npm run build

      - name: Test (non-blocking for initial release)
        working-directory: packages/sparkfx-rn
        run: npm test --silent || echo "No tests or failures ignored for initial release"

      - name: Publish
        working-directory: packages/sparkfx-rn
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
